###########################################################################
#
# Copyright (C) 2007-2009 Daniel Prevost <dprevost@photonsoftware.org>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#

VBS_VERBOSE=

LINK32=link.exe

DIR_RELEASE = .\Release
DIR_RELEASE = .\Release
DIR_DEBUG   = .\Debug
DIR_DEBUG   = .\Debug

CLEANFILES = *~  vc60.pdb

W32_SYS_LIBS = kernel32.lib 

LDD_FLAGS_RELEASE = $(W32_SYS_LIBS) photoncpp.lib photon.lib photonNucleus.lib photonCommon.lib /nologo /IGNORE:4089 /incremental:no /MANIFEST /subsystem:console /machine:I386 /libpath:"../../Release" 
LDD_FLAGS_DEBUG   = $(W32_SYS_LIBS) photoncpp.lib photon.lib photonNucleus.lib photonCommon.lib /nologo /IGNORE:4089 /incremental:no /MANIFEST /subsystem:console /machine:I386 /libpath:"../../Debug" 

CFLAGS_DEBUG   = /Od /I "..\.." /I "..\..\include" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_VC80_UPGRADE=0x0600" /D "_MBCS" /Gm /EHsc /RTC1 /MTd /Fp".\Debug/psosh.pch" /Fo".\Debug/" /Fd".\Debug/" /W3 /nologo /c /Zi /TP /errorReport:prompt
CFLAGS_RELEASE = /O2 /Ob1 /I "..\.." /I "..\..\include" /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_VC80_UPGRADE=0x0600" /D "_MBCS" /GF /FD /EHsc /MT /Gy /Fp".\Release/psosh.pch" /Fo".\Release/" /Fd".\Release/" /W3 /nologo /c /TP /errorReport:prompt

RC_FLAGS_DEBUG   = /d "_DEBUG" /l 0x1009 /fo".\Debug/psosh.res"
RC_FLAGS_RELEASE = /d "NDEBUG" /l 0x1009 /fo".\Release/psosh.res"

OBJS_RELEASE=                             \
        "$(DIR_RELEASE)\constants.obj" \
        "$(DIR_RELEASE)\shell.obj"     \
        "$(DIR_RELEASE)\psosh.obj"     \
        "$(DIR_RELEASE)\util.obj"      

OBJS_DEBUG = $(OBJS_RELEASE:$(DIR_RELEASE)\=.\Debug\)

###########################################################################
#
# Defines the rules.
#
###########################################################################

.cpp{$(DIR_RELEASE)}.obj::
	$(CPP) $(CFLAGS_RELEASE) $< 

.cpp{$(DIR_DEBUG)}.obj::
	$(CPP) $(CFLAGS_DEBUG) $< 

###########################################################################
#
# The targets
#
###########################################################################

all: $(DIR_RELEASE) $(DIR_RELEASE)\psosh.exe $(DIR_DEBUG) $(DIR_DEBUG)\psosh.exe

"$(DIR_RELEASE)\psosh.exe" : "$(DIR_RELEASE)" $(DEF_FILE) $(OBJS_RELEASE)
   -del ..\.$(DIR_RELEASE)\psosh.exe
	rc.exe $(RC_FLAGS_RELEASE) psosh.rc 
	$(LINK32) $(LDD_FLAGS_RELEASE) /out:"$(DIR_RELEASE)\psosh.exe" $(OBJS_RELEASE) $(DIR_RELEASE)\psosh.res
	mt.exe -manifest $(DIR_RELEASE)\psosh.exe.manifest -outputresource:$(DIR_RELEASE)\psosh.exe;1
   copy Release\psosh.exe ..\..\Release

"$(DIR_DEBUG)\psosh.exe" : "$(DIR_DEBUG)" $(DEF_FILE) $(OBJS_DEBUG)
   -del ..\..\Debug\psosh.exe
	rc.exe $(RC_FLAGS_DEBUG) psosh.rc 
	$(LINK32) $(LDD_FLAGS_DEBUG) /out:"$(DIR_DEBUG)\psosh.exe" $(OBJS_DEBUG) .\Debug\psosh.res
	mt.exe -manifest $(DIR_DEBUG)\psosh.exe.manifest -outputresource:$(DIR_DEBUG)\psosh.exe;1
   copy debug\psosh.exe ..\..\Debug

check: all

checkdebug: all

"$(DIR_RELEASE)" :
	if not exist "$(DIR_RELEASE)/$(NULL)" mkdir "$(DIR_RELEASE)"

"$(DIR_DEBUG)" :
	if not exist "$(DIR_DEBUG)/$(NULL)" mkdir "$(DIR_DEBUG)"
   
clean: 
	-@erase /Q $(DIR_DEBUG)
	-@rmdir /Q $(DIR_DEBUG)
	-@erase /Q $(DIR_RELEASE)
	-@rmdir /Q $(DIR_RELEASE)
	-@erase /Q $(CLEANFILES)


