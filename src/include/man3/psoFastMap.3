.TH "psoFastMap" 3 "14 Oct 2008" "Version 0.3.0" "Photon C++ API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
psoFastMap \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
Definition at line 35 of file psoFastMap.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBpsoFastMap\fP (psoSession &session)"
.br
.ti -1c
.RI "virtual \fB~psoFastMap\fP ()"
.br
.ti -1c
.RI "void \fBClose\fP ()"
.br
.RI "\fIClose a hash map. \fP"
.ti -1c
.RI "void \fBDefinition\fP (psoObjectDefinition **definition)"
.br
.RI "\fIRetrieve the data definition of the hash map. \fP"
.ti -1c
.RI "void \fBGet\fP (const void *key, size_t keyLength, void *buffer, size_t bufferLength, size_t &returnedLength)"
.br
.RI "\fIRetrieve the data item identified by the given key from the hash map. \fP"
.ti -1c
.RI "int \fBGetFirst\fP (void *key, size_t keyLength, void *buffer, size_t bufferLength, size_t &retKeyLength, size_t &retDataLength)"
.br
.RI "\fIIterate through the hash map. \fP"
.ti -1c
.RI "int \fBGetNext\fP (void *key, size_t keyLength, void *buffer, size_t bufferLength, size_t &retKeyLength, size_t &retDataLength)"
.br
.RI "\fIIterate through the hash map. \fP"
.ti -1c
.RI "void \fBOpen\fP (const std::string &hashMapName)"
.br
.RI "\fIOpen an existing read-only hash map (see psoSession::CreateObject to create a new object). \fP"
.ti -1c
.RI "void \fBOpen\fP (const char *hashMapName, size_t nameLengthInBytes)"
.br
.RI "\fIOpen an existing read-only hash map (see psoSession::CreateObject to create a new object). \fP"
.ti -1c
.RI "void \fBStatus\fP (psoObjStatus &status)"
.br
.RI "\fIReturn the status of the hash map. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "PSO_HANDLE \fBm_objectHandle\fP"
.br
.RI "\fIPointer to the psoaFastMap struct. \fP"
.ti -1c
.RI "PSO_HANDLE & \fBm_sessionHandle\fP"
.br
.RI "\fIReference to the psoaSession struct (we belong to). \fP"
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "psoFastMap::psoFastMap (psoSession & session)"
.PP
.SS "virtual psoFastMap::~psoFastMap ()\fC [virtual]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "void psoFastMap::Close ()"
.PP
Close a hash map. 
.PP
This function terminates the current access to the hash map in shared memory (the hash map itself is untouched).
.PP
\fBWarning:\fP
.RS 4
Closing an object does not automatically commit or rollback data items that were inserted or removed. You still must use either psoSession::Commit or psoSession::Rollback to end the current unit of work.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIpsoException\fP An abnormal error occured. 
.RE
.PP

.SS "void psoFastMap::Definition (psoObjectDefinition ** definition)"
.PP
Retrieve the data definition of the hash map. 
.PP
\fBWarning:\fP
.RS 4
This function allocates a buffer to hold the definition (using malloc()). You must free it (with free()) when you no longer need the definition. This will be modified soon! (most likely, a new class will encapsulate this).
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdefinition\fP The buffer allocated by the API to hold the content of the object definition. Freeing the memory (with free()) is the responsability of the caller.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIpsoException\fP An abnormal error occured. 
.RE
.PP

.SS "void psoFastMap::Get (const void * key, size_t keyLength, void * buffer, size_t bufferLength, size_t & returnedLength)"
.PP
Retrieve the data item identified by the given key from the hash map. 
.PP
Data items which were added by another session and are not yet committed will not be seen by this function. Likewise, destroyed data items (even if not yet committed) are invisible.
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The key of the item to be retrieved. 
.br
\fIkeyLength\fP The length of the \fIkey\fP buffer (in bytes). 
.br
\fIbuffer\fP The buffer provided by the user to hold the content of the data item. Memory allocation for this buffer is the responsability of the caller. 
.br
\fIbufferLength\fP The length of \fIbuffer\fP (in bytes). 
.br
\fIreturnedLength\fP The actual number of bytes in the data item.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIpsoException\fP An abnormal error occured. 
.RE
.PP

.SS "int psoFastMap::GetFirst (void * key, size_t keyLength, void * buffer, size_t bufferLength, size_t & retKeyLength, size_t & retDataLength)"
.PP
Iterate through the hash map. 
.PP
Data items which were added by another session and are not yet committed will not be seen by the iterator. Likewise, destroyed data items (even if not yet committed) are invisible.
.PP
Data items retrieved this way will not be sorted.
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The key buffer provided by the user to hold the content of the key associated with the first element. Memory allocation for this buffer is the responsability of the caller. 
.br
\fIkeyLength\fP The length of the \fIkey\fP buffer (in bytes). 
.br
\fIbuffer\fP The buffer provided by the user to hold the content of the first element. Memory allocation for this buffer is the responsability of the caller. 
.br
\fIbufferLength\fP The length of \fIbuffer\fP (in bytes). 
.br
\fIretKeyLength\fP The actual number of bytes in the key 
.br
\fIretDataLength\fP The actual number of bytes in the data item.
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success or PSO_IS_EMPTY if the hash map is empty.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIpsoException\fP An abnormal error occured. 
.RE
.PP

.SS "int psoFastMap::GetNext (void * key, size_t keyLength, void * buffer, size_t bufferLength, size_t & retKeyLength, size_t & retDataLength)"
.PP
Iterate through the hash map. 
.PP
Data items which were added by another session and are not yet committed will not be seen by the iterator. Likewise, destroyed data items (even if not yet committed) are invisible.
.PP
Evidently, you must call psoHashMap::GetFirst to initialize the iterator. Not so evident - calling psoHashMap::Get will reset the iteration to the data item retrieved by this function (they use the same internal storage). If this cause a problem, please let us know.
.PP
Data items retrieved this way will not be sorted.
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The key buffer provided by the user to hold the content of the key associated with the data element. Memory allocation for this buffer is the responsability of the caller. 
.br
\fIkeyLength\fP The length of the \fIkey\fP buffer (in bytes). 
.br
\fIbuffer\fP The buffer provided by the user to hold the content of the data element. Memory allocation for this buffer is the responsability of the caller. 
.br
\fIbufferLength\fP The length of \fIbuffer\fP (in bytes). 
.br
\fIretKeyLength\fP The actual number of bytes in the key 
.br
\fIretDataLength\fP The actual number of bytes in the data item.
.RE
.PP
\fBReturns:\fP
.RS 4
0 on success or PSO_REACHED_THE_END when the iteration reaches the end of the hash map.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIpsoException\fP An abnormal error occured. 
.RE
.PP

.SS "void psoFastMap::Open (const std::string & hashMapName)"
.PP
Open an existing read-only hash map (see psoSession::CreateObject to create a new object). 
.PP
\fBParameters:\fP
.RS 4
\fIhashMapName\fP The fully qualified name of the hash map.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIpsoException\fP An abnormal error occured. 
.RE
.PP

.SS "void psoFastMap::Open (const char * hashMapName, size_t nameLengthInBytes)"
.PP
Open an existing read-only hash map (see psoSession::CreateObject to create a new object). 
.PP
\fBParameters:\fP
.RS 4
\fIhashMapName\fP The fully qualified name of the hash map. 
.br
\fInameLengthInBytes\fP The length of \fIhashMapName\fP (in bytes) not counting the null terminator.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIpsoException\fP An abnormal error occured. 
.RE
.PP

.SS "void psoFastMap::Status (psoObjStatus & status)"
.PP
Return the status of the hash map. 
.PP
\fBParameters:\fP
.RS 4
\fIstatus\fP A reference to the status structure.
.RE
.PP
\fBExceptions:\fP
.RS 4
\fIpsoException\fP An abnormal error occured. 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "PSO_HANDLE \fBpsoFastMap::m_objectHandle\fP\fC [protected]\fP"
.PP
Pointer to the psoaFastMap struct. 
.PP
Definition at line 200 of file psoFastMap.
.SS "PSO_HANDLE& \fBpsoFastMap::m_sessionHandle\fP\fC [protected]\fP"
.PP
Reference to the psoaSession struct (we belong to). 
.PP
Definition at line 203 of file psoFastMap.

.SH "Author"
.PP 
Generated automatically by Doxygen for Photon C++ API from the source code.
