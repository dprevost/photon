.TH "pso::Exception" 3 "23 Apr 2009" "Version 0.5.0" "Photon C++ API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pso::Exception \- 
.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
Exceptions thrown by the C++ API (based on the psoErrors error code). 
.PP
Definition at line 47 of file Exception.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBException\fP (PSO_HANDLE sessionHandle, const char *functionName)"
.br
.RI "\fIConstruct a Photon exception using the last error of the session and the name of the function throwing it. \fP"
.ti -1c
.RI "\fBException\fP (const char *functionName, int theErrorCode)"
.br
.RI "\fIConstruct a Photon exception using the return code from the C function and the name of the function throwing it. \fP"
.ti -1c
.RI "virtual \fB~Exception\fP ()"
.br
.ti -1c
.RI "std::string & \fBMessage\fP (std::string &errorMessage)"
.br
.RI "\fIReturn the error message. \fP"
.ti -1c
.RI "std::string & \fBMessage\fP ()"
.br
.RI "\fIReturn the error message. \fP"
.ti -1c
.RI "int \fBErrorCode\fP ()"
.br
.RI "\fIReturn the error code associated with the exception. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::string \fBmsg\fP"
.br
.RI "\fIThe error message, if any. \fP"
.ti -1c
.RI "int \fBerrcode\fP"
.br
.RI "\fIThe last error code seen by the API. \fP"
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "pso::Exception::Exception (PSO_HANDLE sessionHandle, const char * functionName)"
.PP
Construct a Photon exception using the last error of the session and the name of the function throwing it. 
.PP
\fBParameters:\fP
.RS 4
\fIsessionHandle\fP The handle of the current session. This parameter can be NULL. 
.br
\fIfunctionName\fP The name of the function throwing the exception. 
.RE
.PP

.SS "pso::Exception::Exception (const char * functionName, int theErrorCode)"
.PP
Construct a Photon exception using the return code from the C function and the name of the function throwing it. 
.PP
This constructor should be used when you cannot access the saved error from the session (with NULL handles, for example).
.PP
\fBParameters:\fP
.RS 4
\fIfunctionName\fP The name of the function throwing the exception. 
.br
\fItheErrorCode\fP The returned code from the C function (or something equivalent) 
.RE
.PP

.SS "virtual pso::Exception::~Exception ()\fC [virtual]\fP"
.PP
.SH "Member Function Documentation"
.PP 
.SS "std::string& pso::Exception::Message (std::string & errorMessage)"
.PP
Return the error message. 
.PP
\fBParameters:\fP
.RS 4
\fIerrorMessage\fP The error message
.RE
.PP
\fBReturns:\fP
.RS 4
A reference to the error message. 
.RE
.PP

.SS "std::string& pso::Exception::Message ()"
.PP
Return the error message. 
.PP
\fBReturns:\fP
.RS 4
A reference to the error message. 
.RE
.PP

.SS "int pso::Exception::ErrorCode ()\fC [inline]\fP"
.PP
Return the error code associated with the exception. 
.PP
\fBReturns:\fP
.RS 4
The error code. 
.RE
.PP

.PP
Definition at line 100 of file Exception.
.SH "Member Data Documentation"
.PP 
.SS "std::string \fBpso::Exception::msg\fP\fC [private]\fP"
.PP
The error message, if any. 
.PP
Definition at line 105 of file Exception.
.SS "int \fBpso::Exception::errcode\fP\fC [private]\fP"
.PP
The last error code seen by the API. 
.PP
Definition at line 108 of file Exception.

.SH "Author"
.PP 
Generated automatically by Doxygen for Photon C++ API from the source code.
