.TH "vdsSession.h" 3 "1 Nov 2007" "Version 0.1" "vdsf C API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vdsSession.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <vdsf/vdsCommon.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "VDSF_EXPORT int \fBvdsInitSession\fP (\fBVDS_HANDLE\fP *sessionHandle)"
.br
.RI "\fIThis function initializes a session. \fP"
.ti -1c
.RI "VDSF_EXPORT int \fBvdsCommit\fP (\fBVDS_HANDLE\fP handle)"
.br
.ti -1c
.RI "VDSF_EXPORT int \fBvdsCreateObject\fP (\fBVDS_HANDLE\fP handle, const char *objectName, size_t nameLengthInBytes, \fBvdsObjectType\fP objectType)"
.br
.ti -1c
.RI "VDSF_EXPORT int \fBvdsDestroyObject\fP (\fBVDS_HANDLE\fP handle, const char *objectName, size_t nameLengthInBytes)"
.br
.ti -1c
.RI "VDSF_EXPORT int \fBvdsErrorMsg\fP (\fBVDS_HANDLE\fP sessionHandle, char *message, size_t msgLengthInBytes)"
.br
.ti -1c
.RI "VDSF_EXPORT int \fBvdsExitSession\fP (\fBVDS_HANDLE\fP handle)"
.br
.ti -1c
.RI "VDSF_EXPORT int \fBvdsGetStatus\fP (\fBVDS_HANDLE\fP handle, const char *objectName, size_t nameLengthInBytes, \fBvdsObjStatus\fP *pStatus)"
.br
.ti -1c
.RI "VDSF_EXPORT int \fBvdsLastError\fP (\fBVDS_HANDLE\fP sessionHandle)"
.br
.ti -1c
.RI "VDSF_EXPORT int \fBvdsRollback\fP (\fBVDS_HANDLE\fP handle)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "VDSF_EXPORT int vdsCommit (\fBVDS_HANDLE\fP handle)"
.PP
.SS "VDSF_EXPORT int vdsCreateObject (\fBVDS_HANDLE\fP handle, const char * objectName, size_t nameLengthInBytes, \fBvdsObjectType\fP objectType)"
.PP
.SS "VDSF_EXPORT int vdsDestroyObject (\fBVDS_HANDLE\fP handle, const char * objectName, size_t nameLengthInBytes)"
.PP
.SS "VDSF_EXPORT int vdsErrorMsg (\fBVDS_HANDLE\fP sessionHandle, char * message, size_t msgLengthInBytes)"
.PP
.SS "VDSF_EXPORT int vdsExitSession (\fBVDS_HANDLE\fP handle)"
.PP
.SS "VDSF_EXPORT int vdsGetStatus (\fBVDS_HANDLE\fP handle, const char * objectName, size_t nameLengthInBytes, \fBvdsObjStatus\fP * pStatus)"
.PP
.SS "VDSF_EXPORT int vdsInitSession (\fBVDS_HANDLE\fP * sessionHandle)"
.PP
This function initializes a session. 
.PP
It takes one output argument, the session handle.
.PP
Upon successful completion, the session handle is set and the function returns zero. Otherwise the error code is returned and the handle is set to NULL.
.PP
This function will also initiate a new transaction:
.PP
Contrary to some other transaction management software, almost every call made is part of a transaction. Even viewing data (for example deleting the data by another session will be delayed until the current session terminates its access).
.PP
Upon normal termination, the current transaction is rolled back. You MUST explicitly call vdseCommit to save your changes. 
.SS "VDSF_EXPORT int vdsLastError (\fBVDS_HANDLE\fP sessionHandle)"
.PP
.SS "VDSF_EXPORT int vdsRollback (\fBVDS_HANDLE\fP handle)"
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for vdsf C API from the source code.
