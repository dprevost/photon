/* -*- c++ -*- */
/* :mode=c++:  - For jedit, previous line for emacs */
/*
 * Copyright (C) 2006-2007 Daniel Prevost <dprevost@users.sourceforge.net>
 *
 * This file is part of the vdsf (Virtual Data Space Framework) Library.
 *
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 2 as published by the Free Software
 * Foundation and appearing in the file COPYING included in the
 * packaging of this library.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 */

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#ifndef VDS_SESSION_H_CPP
#define VDS_SESSION_H_CPP

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#include <vdsf/vdsCommon.h>

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

class vdsSession
{
public:
   
   vdsSession();

   virtual ~vdsSession();
   
   void Commit();
   
   void CreateObject( const char *  objectName,
                      size_t        nameLengthInBytes,
                      vdsObjectType objectType );
   
   void DestroyObject( const char * objectName,
                       size_t       nameLengthInBytes );

   void ErrorMsg( char   * message,
                  size_t   msgLengthInBytes );

   void GetInfo( vdsInfo * pInfo );

   void GetStatus( const char   * objectName,
                   size_t         nameLengthInBytes,
                   vdsObjStatus * pStatus );

   int LastError();

   /**
    * Rollback all insertions and deletions (of the current session) executed 
    * since the previous call to vdsCommit or vdsRollback.
    *
    * Insertions and deletions subjected to this call include both data items
    * inserted and deleted from data containers (maps, etc.) and objects 
    * themselves created with ::CreateObj and/or destroyed with 
    * ::DestroyObj.
    *
    * Note: the internal calls executed by the engine to satisfy this request
    * cannot fail. As such,
    * you cannot find yourself with an ugly situation where some operations
    * were rollbacked and others not. If an error is returned by this function,
    * nothing was rollbacked.
    *
    * \throw vdsErrors An abnormal error occured.
    */
   void Rollback();
   
private:

   VDS_HANDLE m_sessionHandle;
   friend class vdsFolder;
   friend class vdsHashMap;
   friend class vdsQueue;
};

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#endif /* VDS_SESSION_H_CPP */

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

