/* -*- c++ -*- */
/* :mode=c++:  - For jedit, previous line for emacs */
/*
 * Copyright (C) 2008 Daniel Prevost <dprevost@users.sourceforge.net>
 *
 * This file is part of the vdsf (Virtual Data Space Framework) Library.
 *
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 2 as published by the Free Software
 * Foundation and appearing in the file COPYING included in the
 * packaging of this library.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 */

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#ifndef VDS_EXCEPTION
#define VDS_EXCEPTION

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#include <stdlib.h>
#if defined(WIN32)
#  pragma warning(disable: 4786)
#endif
#include <string>

#include <vdsf/vdsCommon.h>

// Forward declaration
class vdsSession;

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

class VDSF_EXPORT vdsException
{
public:

   vdsException( int          theErrorCode, 
                 VDS_HANDLE   sessionHandle, 
                 const char * functionName );
   
   virtual ~vdsException();

   std::string & Message( std::string & errorMessage );
   
   // Some times, just getting the errcode is allwe care about...
   int ErrorCode() { return errcode; }
   
private:

   std::string msg;
   
   int errcode;
};

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#endif /* VDS_EXCEPTION */
