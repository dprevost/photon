/* -*- c++ -*- */
/* :mode=c++:  - For jedit, previous line for emacs */
/*
 * Copyright (C) 2009 Daniel Prevost <dprevost@photonsoftware.org>
 *
 * This file is part of Photon (photonsoftware.org).
 *
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 2 or version 3 as published by the 
 * Free Software Foundation and appearing in the file COPYING.GPL2 and 
 * COPYING.GPL3 included in the packaging of this software.
 *
 * Licensees holding a valid Photon Commercial license can use this file 
 * in accordance with the terms of their license.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 */

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#ifndef KEY_DEFINITION_ODBC
#define KEY_DEFINITION_ODBC

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#include <stdlib.h>
#include <string>

#include <photon/psoCommon.h>
#include <photon/psoPhotonODBC.h>
#include <photon/KeyDefinition>

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

namespace pso {

/** 
 * This class is a wrapper for the C struct psoObjectDefinition.
 *
 * It's main pupose is to encapsulate the memory management of the C struct.
 */
class PHOTON_EXPORT KeyDefBuilderODBC
{
public:

   /**
    * Construct a data-container definition.
    *
    * \param[in] numKeyFields The number of key fields.
    * \param[in] simple Set this to true if the definition type is "simple"
    *            (fixed length fields) or false if not.
    *
    * \exception pso::Exception An abnormal error occured.
    */
   KeyDefBuilderODBC( psoUint32 numKeyFields, bool simple = true );
   
   virtual ~KeyDefBuilderODBC();

   /**
    * Add a key field to the definition.
    *
    * \param[in]  name The name of the field
    * \param[in]  type The data type of the field. 
    * \param[in]  length The length of the key (needed for some data types).
    *
    * \exception pso::Exception An abnormal error occured.
    */
   void AddKeyField( std::string & name,
                     psoKeyType    type,
                     psoUint32     length );


   /**
    * Add a field to the definition. Fields must be added in order.
    *
    * \param[in]  name The name of the field
    * \param[in]  nameLength The length of the name (in bytes).
    * \param[in]  type The data type of the field. 
    * \param[in]  length The length of the key (needed for some data types).
    *
    * \exception pso::Exception An abnormal error occured.
    */
   void AddKeyField( const char * name,
                     psoUint32    nameLength,
                     psoKeyType   type,
                     psoUint32    length );

   /** Retrieve the key definition.
    *
    * \return The definition of the key as an array of bytes.
    */
   virtual const unsigned char * GetDefinition();

   /** Returns the length, in bytes, of the definition.
    *
    * \return The length, in bytes, of the definition
    */
   virtual psoUint32 GetDefLength();

private:

   /// The C struct array holding the definition of the key fields
   psoKeyFieldDefinition *  keys;

   /// Number of keys in the definition
   psoUint32 numKeys;

   /// Iterator
   psoUint32 currentKey;

   /// true if the definition type is odbc simple, false otherwise.
   bool simpleDef;
};

} // End of namespace

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#endif // KEY_DEFINITION_ODBC

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

