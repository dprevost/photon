/* -*- c++ -*- */
/* :mode=c++:  - For jedit, previous line for emacs */
/*
 * Copyright (C) 2009 Daniel Prevost <dprevost@photonsoftware.org>
 *
 * This file is part of Photon (photonsoftware.org).
 *
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 2 or version 3 as published by the 
 * Free Software Foundation and appearing in the file COPYING.GPL2 and 
 * COPYING.GPL3 included in the packaging of this software.
 *
 * Licensees holding a valid Photon Commercial license can use this file 
 * in accordance with the terms of their license.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 */

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#ifndef PHOTON_DATA_DEF_BUILDER_ODBC
#define PHOTON_DATA_DEF_BUILDER_ODBC

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#include <stdlib.h>
#include <string>

#include <photon/psoCommon.h>
#include <photon/psoPhotonODBC.h>
#include <photon/DataDefinition>

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

namespace pso {

/** 
 * This class is a helper class to build the data definition of
 * Photon objects when the definition is ODBC like.
 *
 * It should be noted that you do not have to use this class, the data
 * definition can be set or retrieved directly as an array of bytes.
 *
 * Internally, this class will set the data definition as an array 
 * of psoFieldDefinition struct.
 */
 class PHOTON_EXPORT DataDefBuilderODBC
{
public:
   /**
    * Construct a data-container definition.
    *
    * Use this constructor to build a definition to create new Photon objects.
    *
    * \param[in] numFields The number of data fields.
    * \param[in] simple Set this to true if the definition type is "simple"
    *            (fixed length fields) or false if not.
    *
    * \exception pso::Exception An abnormal error occured.
    */
   DataDefBuilderODBC( psoUint32 numFields, bool simple = true );

   virtual ~DataDefBuilderODBC();

   /**
    * Add a field to the definition. Fields must be added in order.
    *
    * \param[in]  name The name of the field
    * \param[in]  type The data type of the field. 
    * \param[in]  length The length of the key (needed for some data types).
    * \param[in]  precision The number of digits of a numeric field (not 
    *             counting the separator or the sign).
    * \param[in]  scale The number of digits after the separator of a numeric
    *             field.
    *
    * \exception pso::Exception An abnormal error occured.
    */
   void AddField( std::string  & name,
                  psoFieldType   type,
                  psoUint32      length,
                  psoUint32      precision,
                  psoUint32      scale );

   /**
    * Add a field to the definition. Fields must be added in order.
    *
    * \param[in]  name The name of the field
    * \param[in]  nameLength The length of the name (in bytes).
    * \param[in]  type The data type of the field. 
    * \param[in]  length The length of the key (needed for some data types).
    * \param[in]  precision The number of digits of a numeric field (not 
    *             counting the separator or the sign).
    * \param[in]  scale The number of digits after the separator of a numeric
    *             field.
    *
    * \exception pso::Exception An abnormal error occured.
    */
   void AddField( const char  * name,
                  psoUint32     nameLength,
                  psoFieldType  type,
                  psoUint32     length,
                  psoUint32     precision,
                  psoUint32     scale );


   /** 
    * Retrieve the fields definition.
    *
    * \return The definition of the fields as an array of bytes.
    */
   const unsigned char * GetDefinition();

   /** 
    * Returns the length, in bytes, of the definition.
    *
    * \return The length, in bytes, of the definition
    */
   psoUint32 GetDefLength();

private:

   /// The C struct array holding the definition of the fields
   psoFieldDefinition * fields;

   /// Number of fields in the definition
   psoUint32 numFields;

   /// Iterator
   psoUint32 currentField;

   /// true if the definition type is odbc simple, false otherwise.
   bool simpleDef;
};

} // End of namespace

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

#endif // PHOTON_DATA_DEF_BUILDER_ODBC

// --+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--

