###########################################################################
#
# Copyright (C) 2007-2009 Daniel Prevost <dprevost@photonsoftware.org>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
###########################################################################
#
# Defines the main macros.
#
###########################################################################

LINK32=link.exe

DIR_RELEASE = .\Release
DIR_RELEASE = .\Release
DIR_DEBUG   = .\Debug
DIR_DEBUG   = .\Debug

CLEANFILES = *~ *.dep *.plg vc60.* *.ncb

W32_SYS_LIBS=kernel32.lib advapi32.lib ws2_32.lib

LDD_FLAGS_RELEASE = $(W32_SYS_LIBS) photon.lib photonNucleus.lib photonCommon.lib /nologo /dll /incremental:no /MANIFEST        /machine:I386 /out:"$(DIR_RELEASE)\photoncpp.dll" /implib:"$(DIR_RELEASE)\photoncpp.lib" /libpath:"..\Release"
LDD_FLAGS_DEBUG   = $(W32_SYS_LIBS) photon.lib photonNucleus.lib photonCommon.lib /nologo /dll /incremental:no /MANIFEST /debug /machine:I386 /out:"$(DIR_DEBUG)\photoncpp.dll"   /implib:"$(DIR_DEBUG)\photoncpp.lib"   /libpath:"..\Debug"

CFLAGS_DEBUG   = /Od /I ".." /I "..\include" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_USRDLL" /D "CPP_EXPORTS" /D "BUILD_PHOTON" /D "_VC80_UPGRADE=0x0600" /D "_WINDLL" /D "_MBCS" /Gm /EHsc /RTC1 /MDd /Fp".\Debug/CPP.pch" /Fo".\Debug/" /Fd".\Debug/" /W3 /nologo /c /Zi /TP /errorReport:prompt
CFLAGS_RELEASE = /O2 /Ob1 /I ".." /I "..\include" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_USRDLL" /D "CPP_EXPORTS" /D "BUILD_PHOTON" /D "_VC80_UPGRADE=0x0600" /D "_WINDLL" /D "_MBCS" /GF /FD /EHsc /MD /Gy /Fp".\Release/CPP.pch" /Fo".\Release/" /Fd".\Release/" /W3 /nologo /c /TP /errorReport:prompt

OBJS_RELEASE=                                 \
        "$(DIR_RELEASE)\Definition.obj"    \
        "$(DIR_RELEASE)\Exception.obj"     \
        "$(DIR_RELEASE)\FastMap.obj"       \
        "$(DIR_RELEASE)\FastMapEditor.obj" \
        "$(DIR_RELEASE)\Folder.obj"        \
        "$(DIR_RELEASE)\HashMap.obj"       \
        "$(DIR_RELEASE)\Lifo.obj"          \
        "$(DIR_RELEASE)\Process.obj"       \
        "$(DIR_RELEASE)\Queue.obj"         \
        "$(DIR_RELEASE)\Session.obj"       

OBJS_DEBUG = $(OBJS_RELEASE:$(DIR_RELEASE)\=.\Debug\)

###########################################################################
#
# Defines the rules.
#
###########################################################################

.cpp{$(DIR_RELEASE)}.obj::
	$(CPP) $(CFLAGS_RELEASE) $< 

.cpp{$(DIR_DEBUG)}.obj::
	$(CPP) $(CFLAGS_DEBUG) $< 

all: $(DIR_RELEASE) $(DIR_RELEASE)\photoncpp.dll $(DIR_DEBUG) $(DIR_DEBUG)\photoncpp.dll

"$(DIR_RELEASE)\photoncpp.dll" : "$(DIR_RELEASE)" $(DEF_FILE) $(OBJS_RELEASE)
	-del .$(DIR_RELEASE)\photoncpp.dll
	-del .$(DIR_RELEASE)\photoncpp.lib
	$(LINK32) $(LDD_FLAGS_RELEASE) $(OBJS_RELEASE)
	mt.exe -manifest $(DIR_RELEASE)\photoncpp.dll.manifest -outputresource:$(DIR_RELEASE)\photoncpp.dll;2
	copy Release\photoncpp.dll ..\Release
	copy Release\photoncpp.lib ..\Release

"$(DIR_DEBUG)\photoncpp.dll" : "$(DIR_DEBUG)" $(DEF_FILE) $(OBJS_DEBUG)
	-del ..\Debug\photoncpp.dll
	-del ..\Debug\photoncpp.lib
	$(LINK32) $(LDD_FLAGS_DEBUG) $(OBJS_DEBUG)
	mt.exe -manifest $(DIR_DEBUG)\photoncpp.dll.manifest -outputresource:$(DIR_DEBUG)\photoncpp.dll;2
	copy debug\photoncpp.dll ..\Debug
	copy debug\photoncpp.lib ..\Debug

###########################################################################
#
# The targets
#
###########################################################################

check: all
	cd Tests && nmake -f Makefile.win32 check VBS_VERBOSE=$(VBS_VERBOSE) && cd ..

checkdebug: all
	cd Tests && nmake -f Makefile.win32 checkdebug VBS_VERBOSE=$(VBS_VERBOSE) && cd ..

"$(DIR_RELEASE)" :
	if not exist "$(DIR_RELEASE)/$(NULL)" mkdir "$(DIR_RELEASE)"

"$(DIR_DEBUG)" :
	if not exist "$(DIR_DEBUG)/$(NULL)" mkdir "$(DIR_DEBUG)"
   
clean: 
	-@erase /Q $(DIR_DEBUG)
	-@rmdir /Q $(DIR_DEBUG)
	-@erase /Q $(DIR_RELEASE)
	-@rmdir /Q $(DIR_RELEASE)
	-@erase /Q $(CLEANFILES)
	cd Tests && nmake -f Makefile.win32 clean && cd ..

