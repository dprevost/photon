###########################################################################
#
# Copyright (C) 2007-2008 Daniel Prevost <dprevost@users.sourceforge.net>
#  
# This file is free software; as a special exception the author gives
# unlimited permission to copy and/or distribute it, with or without 
# modifications, as long as this notice is preserved.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
###########################################################################
#
# Defines the main macros.
#
###########################################################################

LINK32=link.exe

OUTDIR_RELEASE = .\Release
INTDIR_RELEASE = .\Release
OUTDIR_DEBUG   = .\Debug
INTDIR_DEBUG   = .\Debug

CLEANFILES = *~ *.dep *.plg vc60.* *.ncb

W32_SYS_LIBS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib ws2_32.lib

LDD_FLAGS_RELEASE = $(W32_SYS_LIBS) vdsf.lib vdsfEngine.lib vdsfCommon.lib /nologo /dll /incremental:no         /machine:I386 /out:"$(OUTDIR_RELEASE)\vdsfcpp.dll" /implib:"$(OUTDIR_RELEASE)\vdsfcpp.lib" /libpath:"..\Release"
LDD_FLAGS_DEBUG   = $(W32_SYS_LIBS) vdsf.lib vdsfEngine.lib vdsfCommon.lib /nologo /dll /incremental:yes /debug /machine:I386 /out:"$(OUTDIR_DEBUG)\vdsfcpp.dll"   /implib:"$(OUTDIR_DEBUG)\vdsfcpp.lib"   /libpath:"..\Debug"

CFLAGS_RELEASE=/nologo /MD  /W3 /O2     /I "..\Common" /I "..\include" /I ".." /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "BUILD_VDSF" /Fo"$(INTDIR_RELEASE)\\"     /c /GX
CFLAGS_DEBUG  =/nologo /MDd /W3 /ZI /Od /I "..\Common" /I "..\include" /I ".." /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "BUILD_VDSF" /Fo"$(INTDIR_DEBUG)\\"   /GZ /c /GX

OBJS_RELEASE=                             \
        "$(INTDIR_RELEASE)\Exception.obj" \
        "$(INTDIR_RELEASE)\Folder.obj"    \
        "$(INTDIR_RELEASE)\HashMap.obj"   \
        "$(INTDIR_RELEASE)\Process.obj"   \
        "$(INTDIR_RELEASE)\Queue.obj"     \
        "$(INTDIR_RELEASE)\Session.obj"   

OBJS_DEBUG = $(OBJS_RELEASE:.\Release\=.\Debug\)

###########################################################################
#
# Defines the rules.
#
###########################################################################

.cpp{$(INTDIR_RELEASE)}.obj::
	$(CPP) $(CFLAGS_RELEASE) $< 

.cpp{$(INTDIR_DEBUG)}.obj::
	$(CPP) $(CFLAGS_DEBUG) $< 

all: $(OUTDIR_RELEASE) $(OUTDIR_RELEASE)\vdsfcpp.dll $(OUTDIR_DEBUG) $(OUTDIR_DEBUG)\vdsfcpp.dll

"$(OUTDIR_RELEASE)\vdsfcpp.dll" : "$(OUTDIR_RELEASE)" $(DEF_FILE) $(OBJS_RELEASE)
	-del ..\Release\vdsfcpp.dll
	-del ..\Release\vdsfcpp.lib
	$(LINK32) $(LDD_FLAGS_RELEASE) $(OBJS_RELEASE)
	copy Release\vdsfcpp.dll ..\Release
	copy Release\vdsfcpp.lib ..\Release

"$(OUTDIR_DEBUG)\vdsfcpp.dll" : "$(OUTDIR_DEBUG)" $(DEF_FILE) $(OBJS_DEBUG)
	-del ..\Debug\vdsfcpp.dll
	-del ..\Debug\vdsfcpp.lib
	$(LINK32) $(LDD_FLAGS_DEBUG) $(OBJS_DEBUG)
	copy debug\vdsfcpp.dll ..\Debug
	copy debug\vdsfcpp.lib ..\Debug

###########################################################################
#
# The targets
#
###########################################################################

check: all

#	cd Tests && nmake -f Makefile.win32 check VBS_VERBOSE=$(VBS_VERBOSE) && cd ..

checkdebug: all

#	cd Tests && nmake -f Makefile.win32 checkdebug VBS_VERBOSE=$(VBS_VERBOSE) && cd ..

"$(OUTDIR_RELEASE)" :
	if not exist "$(OUTDIR_RELEASE)/$(NULL)" mkdir "$(OUTDIR_RELEASE)"

"$(OUTDIR_DEBUG)" :
	if not exist "$(OUTDIR_DEBUG)/$(NULL)" mkdir "$(OUTDIR_DEBUG)"
   
clean: 
	-@erase /Q Debug
	-@rmdir /Q Debug
	-@erase /Q Release
	-@rmdir /Q Release
	-@erase /Q $(CLEANFILES)

#	cd Tests && nmake -f Makefile.win32 clean && cd ..

